- name: Update system package index
  dnf:
    name: '*'
    state: latest
    update_cache: true
  become: true

- name: Install specified packages
  become: true
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ packages_to_install }}"

# - name: Add Docker repository
#   dnf:
#     name: https://download.docker.com/linux/centos/docker-ce.repo
#     state: present
#   become: true

# - name: Add Docker repository
#   yum_repository:
#     name: Docker-ce
#     description: Docker CE Stable - $basearch
#     baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
#     enabled: true
#     gpgcheck: true
#     gpgkey: https://download.docker.com/linux/centos/gpg
#   become: true

- name: Add Docker repository
  yum_repository:
    name: docker-ce
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/8/$basearch/stable
    enabled: true
    gpgcheck: true
    gpgkey: https://download.docker.com/linux/centos/gpg
  become: true

- name: Install Docker and dependencies
  dnf:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
  become: true

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: true
  become: true

- name: Install Docker Compose
  become: true
  block:
    - name: Download Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify Docker Compose installation
      command: "/usr/local/bin/docker-compose --version"
      register: docker_compose_version
      changed_when: false

    - name: Display Docker Compose version
      debug:
        var: docker_compose_version.stdout

- name: Create docker group
  group:
    name: docker
    state: present

- name: Add user to docker group
  user:
    name: "{{ ansible_env.USER }}"
    groups: docker
    append: true

- name: Verify Docker installation
  command: docker run hello-world
  register: docker_hello_world
  changed_when: false

- name: Check if Docker installation is successful
  assert:
    that:
      - "'Hello from Docker!' in docker_hello_world.stdout"
    fail_msg: "Docker installation verification failed"
    success_msg: "Docker installation verified successfully"
